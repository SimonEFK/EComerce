@model EditProductInputModel;
<div class="row justify-content-center align-content-center">
    <div class="col">
        <form method="post">
            <div class="row mb-3">
                <div class="col-md-6">
                    <label asp-for="@this.Model.Name" class="form-label"></label>
                    <input asp-for="@this.Model.Name" placeholder="e.g. AMD Ryzen 7 7800X3D" class="form-control" />
                    <span asp-validation-for="@this.Model.Name" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="@this.Model.NameDetailed" class="form-label"></label>
                    <input asp-for="@this.Model.NameDetailed" placeholder="e.g. AMD Ryzen 7 7800X3D 4.2 GHz 8-Core Processor" class="form-control" />
                    <span asp-validation-for="@this.Model.NameDetailed" class="text-danger"></span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <select asp-for="@this.Model.CategoryId" class="form-select" id="categorySelectInputField">
                        <option>Select Category</option>
                        @foreach (var category in this.Model.CategoryList.OrderBy(x => x.Name))
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>
                    <span class="text-danger" asp-validation-for="@this.Model.CategoryId"></span>
                </div>
                <div class="col-md-6">
                    <select asp-for="@this.Model.ManufacturerId" class="form-select">
                        <option>Select Manufacturer</option>
                        @foreach (var manufacturer in this.Model.ManufacturerList.OrderBy(x => x.Name))
                        {
                            <option value="@manufacturer.Id">@manufacturer.Name</option>
                        }
                    </select>
                    <span class="text-danger" asp-validation-for="@this.Model.ManufacturerId"></span>

                </div>
            </div>

            <div class="row">
                <div class="col">
                    <h3>Specifications</h3>
                    <div class="row">
                        <div class="col">
                            <select id="specificationsSelectMenu" class="form-select">
                                <option>Select Specification</option>
                            </select>
                            <a target="_blank" href="/Administration/CategoryManagment">Add New Values</a>
                        </div>
                        <div class="col">
                            <select id="specValuesSelectMenu" class="form-select">
                                <option>Select Value</option>
                            </select>

                        </div>
                    </div>
                    <button id="addSpecBtn" type="button" class="btn btn-success">Add</button>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="specificationsBox">
                                @foreach (var specification in Model.Specifications)
                                {
                                    <div class="row">
                                        <div class="col-auto">
                                            <input disabled class="form-control" placeholder="@specification.SpecificationName" />
                                        </div>
                                        <div class="col-auto">
                                            <div class="input-group flex-nowrap">
                                                <input disabled class="form-control" placeholder="@specification.ValueName" />
                                                <a href="/Administration/ProductManagment/RemoveSpecification/@Model.Id?valueId=@specification.ValueId" class="btn btn-outline-danger">Remove</a>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                    </div>
                </div>
                <div class="row">
                    <button class="btn btn-info w-25 mx-auto" type="submit">Submit</button>
                </div>
            </div>

        </form>

    </div>
</div>
@section Scripts {
    <script>
        let categoryInfo = {};
        
        window.addEventListener('load', UpdateSpecificationValues)
        
        let categorySelectInputField = document.querySelector("#categorySelectInputField");

        let specificationsSelectMenu = document.querySelector('#specificationsSelectMenu');
        let specValuesSelectMenu = document.querySelector("#specValuesSelectMenu");

        
        categorySelectInputField.addEventListener("input", UpdateSpecificationValues);
        specificationsSelectMenu.addEventListener("input", UpdateValues);


        async function UpdateSpecificationValues(event) {

            debugger;
            let value = categorySelectInputField.value;
            let response = await fetch(`/administration/categorymanagment/categoryinfojson?categoryId=${value}`);
            categoryInfo = await response.json();

            specificationsSelectMenu.innerHTML = `<option>Select Specification</option>`;
            specValuesSelectMenu.innerHTML = `<option>Select Value</option>`;
            Array.from(categoryInfo.specifications).forEach(x => {

                let option = document.createElement('option')

                option.textContent = x.name;
                option.value = x.id;

                specificationsSelectMenu.appendChild(option);

            });
        }
        function UpdateValues(event) {

            let specId = specificationsSelectMenu.value;
            let specification = categoryInfo.specifications.filter(x => x.id == specId);
            specValuesSelectMenu.innerHTML = '';

            specification[0].values.forEach(x => {
                let option = document.createElement('option');
                option.textContent = x.value;
                option.value = x.id;
                option.dataset.specname = specification[0].name;
                option.dataset.valuename = x.value;
                specValuesSelectMenu.appendChild(option);

            })


        }

        let addSpecBtn = document.querySelector('#addSpecBtn');
        addSpecBtn.addEventListener('click', AddSpecification)
        function AddSpecification(event) {

            let specificationsBox = document.querySelector('.specificationsBox');
            let specValueSelectMenu = document.querySelector('#specValuesSelectMenu');

            let specName = specValueSelectMenu.options[specValueSelectMenu.selectedIndex].dataset["specname"];
            let valueName = specValueSelectMenu.options[specValueSelectMenu.selectedIndex].dataset["valuename"];
            let valueId = specValueSelectMenu.value;
            if (!valueId) {
                console.log("Invalid input");
                return
            };
            let productId = @Model.Id;
            window.location.href = `/Administration/ProductManagment/AddSpecification/${productId}?valueId=${valueId}`;
        }
    </script>
} 