@using HardwareStore.App.Models.ProductCatalog
@model ComponentDetailViewModel
<div class="product-title-container mb-3">
    <h1 class="product-title p-lg-3">
        @{
            var name = this.Model.Product.NameDetailed ?? this.Model.Product.Name;
            @name
        }
    </h1>
    <a href="/Catalog/Products/@this.Model.Product">@this.Model.Product.CategoryName</a>
</div>
<div class="row m-0">
    @if (Model.Product.ProductReviewsRatingAvg > 0)
    {
        <partial name="_ProductStarRatingPartial" model="@Model.Product.ProductReviewsRatingAvg" />
    }
    <div class="product-specs col-md-5">
        <span>Specifications</span>
        <table class="table table-striped ">

            <tbody>
                @foreach (var item in this.Model.Product.Specifications.OrderBy(x => x.Name))
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@string.Join(", ", item.Values)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-md-4 me-2">
        <div class="product-img-display">
            <div class="product-img-display-container">
                <img id="displayImg" src="@this.Model.Product.Images.FirstOrDefault()" />
            </div>
        </div>
        @if (this.Model.Product.Images.Count > 1)
        {
            <hr />
            <div class="product-gallery">
                <div class="product-img-list" id="imgList">
                    <ul class="d-flex justify-content-between">
                        @foreach (var image in this.Model.Product.Images)
                        {
                            <li class="product-gallery-img-container">
                                <img src="@image">
                            </li>
                        }
                    </ul>
                </div>
            </div>

        }
        <div class="row">
            <div class="col">
                <div class="extra-info-container" id="productInfoContainer">
                    <p class="product-price">50.00</p>
                    <div class="btn-container">
                        <button class="btn btn-primary ms-auto" data-addProductToCart="@Model.Product.NameDetailed" data-productId="@Model.Product.Id">Buy</button>
                        <button class="btn btn-success">Add To Favorites</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row flex-column" id="productReviewsRow">
    <partial name="_ProductReviewsPartial" model="@Model.ProductReviewViewModel" />
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let submitReviewBtn = document.querySelector('#submitReviewBtn');
        if (submitReviewBtn) {
            submitReviewBtn.addEventListener('click', SubmitReviewForm);
        }
        async function SubmitReviewForm(event) {

            event.preventDefault();
            let reviewForm = document.querySelector('#reviewForm');
            debugger;
            $('#reviewForm').validate();
            if ($('#reviewForm').valid()) {

                let data = new FormData(reviewForm);
                const jsonObject = {};
                data.forEach((value, key) => {
                    jsonObject[key] = value;
                });
                debugger;
                let reviewApiUrl = `/api/ReviewApi`;
                let response = await fetch(reviewApiUrl, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(jsonObject)
                })
                if (response.ok) {
                    var productId = @Model.Product.Id;
                    var reviewsUrl = `/Review/ProductReviews?productId=${productId}`;
                    $('#productReviewsRow').load(reviewsUrl);
                }
            }
        };
        let productContainer = document.querySelector('#productInfoContainer');
        productContainer.addEventListener('click', AddProductToCart);
        let imgList = document.querySelector('#imgList');
        let displayImg = document.querySelector('#displayImg')
        let imgContainers = document.querySelectorAll(".product-gallery-img-container");
        if (imgList) {
            imgList.addEventListener('click', ChangeImage);
        }
        function ChangeImage(event) {
            if (event.target instanceof HTMLImageElement) {
                let selectedImg = event.target.getAttribute("src");
                displayImg.setAttribute("src", selectedImg);
                imgContainers.forEach((element) => element.classList.remove('active'));
                let selectedContainer = event.target.closest('.product-gallery-img-container');
                selectedContainer.classList.add("active");
            }
        }

    </script>
}
