@using HardwareStore.App.Models.ProductCatalog;
@using HardwareStore.App.Models.ProductFilter;
@model FilterModel;

<div class="container-fluid">
    <div class="row justify-content-between">
        <div class="col-lg-2">
            <select id="sortProductsSelectMenu" class="btn btn-primary mb-2 form-select">
                @foreach (var item in this.Model.SortOrder)
                {
                    if (item == ViewData["sortOrder"]?.ToString())
                    {
                        <option selected value="@item">@item</option>
                    }
                    else
                    {
                        <option value="@item">@item</option>
                    }
                }
            </select>
            <button class="btn btn-primary w-100 mb-3" type="button" data-bs-toggle="collapse" data-bs-target="#FilterMenu" aria-expanded="false" aria-controls="collapseExample">
                Filters
            </button>
            <div class="overflow-scroll h-75 z-2 col-lg-2 col-11 position-absolute collapse show" id="FilterMenu">
                <form data-category="@ViewData["category"]" id="filterForm" method="post" asp-controller="Catalog" asp-action="Productss" asp-route-category="@ViewData["category"]">
                    @{
                        var selectedSpecificationIds = ViewData["selectedSpecs"] as List<int>;
                        var selectedManufacturerIds = ViewData["selectedManufacturers"] as List<int>;
                    }
                    <input id="sortInputHidden" type="hidden" name="so" value="@ViewData["sortOrder"]" />
                    <input id="searchStringHidden" type="hidden" name="s" value="@ViewData["searchstring"]" />
                    @if (Model.Specifications.Count == 1)
                    {
                        <ul class="list-group">
                            @foreach (var category in this.Model.Specifications)
                            {
                                <li class="list-group-item text-center">
                                    <a asp-controller="Catalog" asp-action="Products" asp-route-page="1" asp-route-category="@category.Value.FirstOrDefault().CategoryId">@category.Key</a>
                                </li>
                                @foreach (var specification in category.Value)
                                {
                                    <li class="list-group-item">
                                        <span class="fw-bold">@specification.Name</span>
                                        @foreach (var value in specification.Values)
                                        {
                                            if (value.ProductsCount > 0)
                                            {

                                                <div class="form-check">
                                                    @if (selectedSpecificationIds is not null && selectedSpecificationIds.Contains(value.Id))
                                                    {
                                                        <input class="form-check-input" type="checkbox" value="@value.Id" id="@value.Id" name="ss[@specification.Id]" checked>
                                                    }
                                                    else
                                                    {
                                                        <input class="form-check-input" type="checkbox" value="@value.Id" id="@value.Id" name="ss[@specification.Id]">

                                                    }
                                                    <label class="form-check-label" for="@value.Id">@value.Value</label>
                                                </div>
                                            }

                                        }
                                    </li>
                                }
                            }
                        </ul>
                    }

                    <ul class="list-group">
                        <li class="list-group-item">
                            <span class="fw-bold">Manufacturers</span>
                            @foreach (var manufacturer in Model.Manufacturers)
                            {
                                var inputid = $"M{manufacturer.Item1}";
                                <div class="form-check">
                                    @if (selectedManufacturerIds is not null && selectedManufacturerIds.Contains(manufacturer.Item2))
                                    {
                                        <input class="form-check-input" type="checkbox" value="@manufacturer.Item2" id="@inputid" name="m" checked>

                                    }
                                    else
                                    {
                                        <input class="form-check-input" type="checkbox" value="@manufacturer.Item2" id=@inputid name="m">

                                    }
                                    <label class="form-check-label" for=@inputid>@manufacturer.Item1</label>
                                </div>
                            }
                        </li>

                    </ul>
                </form>
            </div>

        </div>
        <div class="col-lg-9">
            <div class="row row-gap-3" id="productsRow">
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>

        this.window.addEventListener('load', SubmitForm(1));
        this.window.addEventListener('load', Pagination)

        document.querySelector('#productsRow').addEventListener('click', AddProductToCart);
        document.querySelector('#filterForm').addEventListener('click', (event) => {
            if (event.target.type == "checkbox") {

                SubmitForm(1);
            }
        });
        document.querySelector('#sortProductsSelectMenu').addEventListener('change', (event) => {

            SubmitForm(1);
        });

        async function SubmitForm(pageNumber) {

            let sortOrderValue = document.querySelector('#sortProductsSelectMenu').value;
            document.querySelector('#sortInputHidden').value = sortOrderValue;
            let searchString = document.querySelector('#globalSearchbar').value;
            document.querySelector('#searchStringHidden').value = searchString;

            let filterForm = document.querySelector('#filterForm');

            let category = filterForm.dataset['category'];

            let url =
                `/Catalog/Products/${pageNumber}`;
            if (category) {
                url = url + `/${category}`;
            }

            let formData = new FormData(filterForm);
            let options = {
                'method': 'POST',
                body: formData
            }

            let response = await fetch(url, options);
            debugger;
            if (response.redirected) {
                window.location.href = response.url;

            }
            if (response.status == 200) {
                let html = await response.text();
                let productRow = document.querySelector('#productsRow')
                productRow.innerHTML = html;
            }


        }
        function Pagination() {
            document.querySelector('#productsRow').addEventListener('click', () => {
                let target = event.target;
                if (target.matches('[data-pageNumber]')) {
                    event.preventDefault();
                    let pageNumber = event.target.dataset["pagenumber"];
                    if (pageNumber % 1 === 0) {
                        SubmitForm(pageNumber)
                    }
                }
            });
        }

    </script>
}